{
  library(tximport)
  library(DESeq2)
  library(doBy)
  library(RSQLite)
  library(gplots)
  library(ActivePathways)
  library(rtracklayer)
  library(dplyr)
  library(tibble)
  library(scatterplot3d)
  library(limma)
  library(sva)
  library(refGenome)
}

#Nomenclatura
E##_# Enfermo
S##_# Control
#L#_# Lupus
#C#_# Crohn
#M#_# Esclerosis
#A#_# Artritis
#D#_# Diabetes
##1_# primer paper de esa #enfermedad
##2_# segundo paper de esa #enfermedad

Ejemplo:
EL1_1


#####################################################################################################################1
#####################################################################################################################1
#####################################################################################################################1
#----------------------------------------------------------------PCA y comBat de los datos de los autores------------------------------------------------------

getNormalizedCounts <- function(count_mat){
  samples_classA = 1:round(ncol(count_mat)/2)
  samples_classB = (1:ncol(count_mat))[-samples_classA]
  aux_data <- count_mat
  aux_desc <- data.frame(condition=c(rep("treated",length(samples_classA)),rep("untreated",length(samples_classB))), type=rep("paired-end",c(length(samples_classA)+length(samples_classB))))
  aux_dds <- DESeqDataSetFromMatrix(countData = aux_data, colData = aux_desc, design = ~condition)
  aux_dds <- DESeq(aux_dds)
  normalized_counts <- counts(aux_dds, normalized=T)
  list(dds=aux_dds, norm_counts=normalized_counts)
}

#----------------------------------------------------------------PCA y comBat de los datos de los autores------------------------------------------------------

#Ojo, poner tu dirección
#gz_paper_LE <- file('C:/Users/aleja/Documents/Bioinformatics team/Analisis en R/Nuevo 2021 Cheng/GSE162828_gene_expression_ALEX.txt', 'rt')
#gz_paper_LE <- file('D:/Archivos_de_trabajo/Analisis_combinado/GSE162828_gene_expression.txt.gz', 'rt')
paper_LE <- read.table(gz_paper_LE,header=T, sep = '\t')
match_paper_LE <- match(paper_LE$gene_id, genes$gene_id)
paper_LE$gene_id <- genes$gene_name[match_paper_LE]
#Nombres originales del archivo

samples_LE <- c('X1907155_count', 'X1907156_count', 'X1907225_count', 'X1907226_count', 'X1907227_count','X09769409xu_count', 'X12112222huang_count', 'X12114794zhang_count', 'X12192409lu_count', 'X12213331ye_count')
lab_LE <- c( 'EL1', 'EL2', 'EL3', 'EL4', 'EL5', 'SL1', 'SL2', 'SL3', 'SL4', 'SL5')

paper_LE <- paper_LE[!is.na(paper_LE$gene_id),]
mean_ord_LE <- order(apply(paper_LE[,samples_LE], 1, mean), decreasing = T)
paper_LE <- paper_LE[mean_ord_LE,]
paper_LE <- paper_LE[!duplicated(paper_LE$gene_id),]
rownames(paper_LE) <- paper_LE$gene_id
         
paper_LE_counts <- round(log2(empty_row(paper_LE[,samples_LE] + 1,2)))
colnames(paper_LE_counts) <- lab_LE
#Hacer normalización de conteos por DESeq2
paper_LE_counts<- getNormalizedCounts(paper_LE_counts)$norm_counts #Este me arroja un warning, hay que revisarlo
plotDensities(paper_LE_counts, legend = "topright")

paper_LE_mad <- apply(paper_LE_counts, 1, mad)
paper_LE_pca <- prcomp(paper_LE_counts[order(paper_LE_mad, decreasing = T)[0:2000],])

#jpeg(file="Paper PreCombat 1 v.s. 2.jpg",width = 500, height = 500)
plot(paper_LE_pca$rotation[,1], paper_LE_pca$rotation[,2], col=c(1,2,3,4,5,6,7,8,9,10), pch=c(15,15,15,15,15,17,17,17,17,17), cex = 1, main = "PC1 vs PC2 Lupus autores (normalizado)", xlab= paste("PCA1: ", round(summary(paper_LE_pca)$importance[2,1]*100,1),"%", sep=""), ylab=paste("PCA2: ", round(summary(paper_LE_pca)$importance[2,2]*100,1),"%",sep=""))
#, xlim=range(-0.4,0.4), ylim=range(-0.6,0.8)
legend("bottomleft", legend=rownames(paper_LE_pca$rotation), col=c(1,2,3,4,5,6,7,8,9,10),pch = c(15,15,15,15,15,17,17,17,17,17), pt.cex = 1, cex=0.75, horiz = F, ncol = 2)
#dev.off()

gz_paper_RA <- gzfile('D:/Archivos_de_trabajo/Analisis_combinado/GSE90081_5nRA_12HC_7tRA_fpkm_table.txt.gz', 'rt')
paper_RA <- read.table(gz_paper_RA,header=T, sep = '\t')
gene_RA_match <- match(paper_RA$Gene_ID, genes$gene_name)
paper_RA <- paper_RA[!is.na(gene_RA_match),]

samples_A <- c('ntRA_01', 'ntRA_02', 'ntRA_03', 'ntRA_04', 'ntRA_05', 'HC_01', 'HC_02', 'HC_03', 'HC_04', 'HC_05', 'HC_06', 'HC_07', 'HC_08', 'HC_09', 'HC_10' )
etiq_A <- c('EA1', 'EA2', 'EA3', 'EA4', 'EA5', 'SA1', 'SA2', 'SA3', 'SA4', 'SA5', 'SA6', 'SA7', 'SA8', 'SA9', 'SA10')

mean_ord_RA <- order(apply(paper_RA[,samples_A], 1, mean), decreasing = T)
paper_RA <- paper_RA[mean_ord_RA,]
paper_RA <- paper_RA[!duplicated(paper_RA$Gene_ID),]
rownames(paper_RA) <- paper_RA$Gene_ID

common_match <- match(paper_RA$Gene_ID, paper_LE$gene_id)
paper_RA_fpkm <- normalizeQuantiles(log2(paper_RA[,-1:-2] + 1))[,samples_A]
colnames(paper_RA_fpkm) <- etiq_A

paper_RA_mad <- apply(paper_RA_fpkm, 1, mad)
paper_RA_pca <- prcomp(paper_RA_fpkm[order(paper_RA_mad, decreasing = T)[0:2000],])

#jpeg(file="Paper PreCombat 1 v.s. 2.jpg",width = 500, height = 500)
plot(paper_RA_pca$rotation[,1], paper_RA_pca$rotation[,2], col=c(1:15), pch=c(15,15,15,15,15,17,17,17,17,17,17,17,17,17,17), cex = 1, main = "PC1 vs PC2 Arthritis  autores (normalizado)", xlab= paste("PCA1: ", round(summary(paper_RA_pca)$importance[2,1]*100,1),"%", sep=""), ylab=paste("PCA2: ", round(summary(paper_RA_pca)$importance[2,2]*100,1),"%",sep=""))
#, xlim=range(-0.4,0.4), ylim=range(-0.6,0.8)
legend("bottomright", legend=rownames(paper_RA_pca$rotation), col=c(1:15),pch = c(15,15,15,15,15,17,17,17,17,17,17,17,17,17,17), pt.cex = 1, cex=0.75, horiz = F, ncol = 2)
#dev.off()

#Preparacion de la matriz conjunta
LE_match <- getNormalizedCounts(round(log2(paper_LE[common_match,samples_LE][!is.na(common_match),] + 1)))$norm_counts
colnames(LE_match) <- lab_LE
RA_match <- normalizeQuantiles(log2(paper_RA[match(rownames(LE_match), paper_RA$Gene_ID),samples_A] + 1))
colnames(RA_match) <- etiq_A

RA_LE_mat <- data.frame(RA_match, LE_match)

mad_filt1 <- apply(RA_LE_mat, 1, mad)
pca_autores <- prcomp(RA_LE_mat[order(mad_filt1,decreasing = T)[0:2000],])

color_vector = c(rep(1, times = length(grep("EA", rownames(pca_autores$rotation)))),
                 rep(1, times = length(grep("SA", rownames(pca_autores$rotation)))),
                 rep(2, times = length(grep("EL", rownames(pca_autores$rotation)))),
                 rep(2, times = length(grep("SL", rownames(pca_autores$rotation))))
)

pch_vector =   c(rep(15, times = length(grep("EA", rownames(pca_autores$rotation)))),
                 rep(17, times = length(grep("SA", rownames(pca_autores$rotation)))),
                 rep(15, times = length(grep("EL", rownames(pca_autores$rotation)))),
                 rep(17, times = length(grep("SL", rownames(pca_autores$rotation))))
)

plot(pca_autores$rotation[,1], pca_autores$rotation[,2], xlab= paste("PCA1: ", round(summary(pca_autores)$importance[2,1]*100,1),"%", sep=""), ylab=paste("PCA2: ", round(summary(pca_autores)$importance[2,2]*100,1),"%",sep=""), col=color_vector, pch=pch_vector, cex = 1.1,  main = "Autores Artritis vs Lupus Pre ComBat: PC1 vs PC2")
legend("topleft", legend=rownames(pca_autores$rotation), col=color_vector,pch = pch_vector, pt.cex = 1, cex=0.6, horiz = F, ncol = 5, inset=c(0.1,0.25))
#text(pca_autores$rotation[,1], pca_autores$rotation[,2], labels = rownames(pca_autores$rotation))
#legend("top", legend=c("Artritis", "Lupus"), col=c(1,2), pch = c(15,15), pt.cex = 1, cex=0.6, horiz = F, ncol = 1, inset=c(0.1,0.5))
#legend("top", legend=c("Control", "Enfermedad"), pch = c(2,0), pt.cex = 1, cex=0.6, horiz = F, ncol = 1, inset=c(0.1,0.35))

modcombat_autores <- model.matrix(~1, data = data.frame(cmb=color_vector))
combat_autores <- ComBat(dat= RA_LE_mat, batch = color_vector, mod = modcombat_autores, par.prior = T, prior.plots = F)

mad_filt2 <- apply(combat_autores, 1, mad)
pca_combat_autores <- prcomp(combat_autores[order(mad_filt2,decreasing = T)[0:2000],])
plot(pca_combat_autores$rotation[,1], pca_combat_autores$rotation[,2], xlab= paste("PCA1: ", round(summary(pca_combat_autores)$importance[2,1]*100,1),"%", sep=""), ylab=paste("PCA2: ", round(summary(pca_combat_autores)$importance[2,2]*100,1),"%",sep=""), col=color_vector, pch=pch_vector, cex = 1.1,  main = "Autores Artritis vs Lupus (corregido) Post ComBat: PC1 vs PC2")
